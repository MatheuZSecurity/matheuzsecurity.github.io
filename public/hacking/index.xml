<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hackings on 0xMatheuZ</title>
    <link>http://localhost:1313/hacking/</link>
    <description>Recent content in Hackings on 0xMatheuZ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 14 May 2025 19:42:06 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/hacking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bypassing LD_PRELOAD Rootkits Is Easy</title>
      <link>http://localhost:1313/hacking/bypass-userland-hooks/</link>
      <pubDate>Wed, 14 May 2025 19:42:06 -0400</pubDate>
      <guid>http://localhost:1313/hacking/bypass-userland-hooks/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In this post, I&amp;rsquo;m going to get into a really cool topic, which is how to bypass the hooks used by LD_PRELOAD rootkits, a technique that is effective against most, if not all, of them.&lt;/p&gt;
&lt;h2 id=&#34;ld_preload&#34;&gt;LD_PRELOAD&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;LD_PRELOAD&lt;/code&gt; is an environment variable used by dynamic linkers on Unix-like systems (such as /lib64/ld-linux-x86-64.so.2 on x86_64 Linux) to force specific shared libraries to be loaded before any others during program execution.&lt;/p&gt;
&lt;p&gt;This technique allows you to &amp;ldquo;hook&amp;rdquo; functions from standard libraries, such as libc, without modifying the program binary, and is therefore widely used both for debugging and for offensive techniques such as user space rootkits.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A simple way to detect and remove LKM rootkit KoviD (Outdated)</title>
      <link>http://localhost:1313/hacking/a-simple-way-to-detect-and-remove-kovid-lkm-rootkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/hacking/a-simple-way-to-detect-and-remove-kovid-lkm-rootkit/</guid>
      <description>Learn a simple way on how to detect and remove Kovid rootkit.</description>
    </item>
    <item>
      <title>Detecting rootkits based on ftrace hooking.</title>
      <link>http://localhost:1313/hacking/ftrace-rootkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/hacking/ftrace-rootkit/</guid>
      <description>Learn how to detect rootkit based on ftrace hooking.</description>
    </item>
    <item>
      <title>ElfDoor-gcc</title>
      <link>http://localhost:1313/hacking/gcc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/hacking/gcc/</guid>
      <description>Hijacking GCC via LD_PRELOAD.</description>
    </item>
    <item>
      <title>How detect a LD_PRELOAD rootkit and hide from ldd &amp; /proc</title>
      <link>http://localhost:1313/hacking/ldpreload-rootkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/hacking/ldpreload-rootkit/</guid>
      <description>Learn how to detect and hide a LD_PRELOAD rootkit from ldd, /proc/pid/maps, etc.</description>
    </item>
    <item>
      <title>Linux Threat Hunting Persistence</title>
      <link>http://localhost:1313/hacking/linux-threat-hunting-persistence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/hacking/linux-threat-hunting-persistence/</guid>
      <description>Learn about persistence in Linux and how to hunt</description>
    </item>
  </channel>
</rss>
